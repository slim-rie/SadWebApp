"""Add auto timestamps to Product model

Revision ID: bf98d7c449c9
Revises: dab57ecf061b
Create Date: 2025-06-04 04:47:41.092638

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision = 'bf98d7c449c9'
down_revision = 'dab57ecf061b'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('payments')
    with op.batch_alter_table('cancellation_reason', schema=None) as batch_op:
        batch_op.alter_column('cancellation_reason_name',
               existing_type=mysql.VARCHAR(length=255),
               type_=sa.String(length=100),
               existing_nullable=False)
        batch_op.create_unique_constraint(None, ['cancellation_reason_name'])
        batch_op.drop_column('other_reason')

    with op.batch_alter_table('damage_products', schema=None) as batch_op:
        batch_op.alter_column('reported_at',
               existing_type=mysql.DATETIME(),
               nullable=False,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))

    with op.batch_alter_table('inventory', schema=None) as batch_op:
        batch_op.alter_column('created_at',
               existing_type=mysql.DATETIME(),
               nullable=False,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
        batch_op.alter_column('updated_at',
               existing_type=mysql.DATETIME(),
               nullable=False,
               existing_server_default=sa.text('CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP'))
        batch_op.drop_index('unique_product_id')

    with op.batch_alter_table('inventory_transactions', schema=None) as batch_op:
        batch_op.alter_column('transaction_date',
               existing_type=mysql.DATETIME(),
               nullable=False,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))

    with op.batch_alter_table('order_cancellation', schema=None) as batch_op:
        batch_op.alter_column('cancelled_at',
               existing_type=mysql.DATETIME(),
               nullable=False)

    with op.batch_alter_table('order_items', schema=None) as batch_op:
        batch_op.alter_column('variant_id',
               existing_type=mysql.INTEGER(),
               nullable=False)
        batch_op.alter_column('discount_amount',
               existing_type=mysql.DECIMAL(precision=10, scale=2),
               nullable=False,
               existing_server_default=sa.text("'0.00'"))

    with op.batch_alter_table('orders', schema=None) as batch_op:
        batch_op.alter_column('order_date',
               existing_type=mysql.DATETIME(),
               nullable=False,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
        batch_op.alter_column('created_at',
               existing_type=mysql.DATETIME(),
               nullable=False,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
        batch_op.alter_column('updated_at',
               existing_type=mysql.DATETIME(),
               nullable=False,
               existing_server_default=sa.text('CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP'))

    with op.batch_alter_table('payment', schema=None) as batch_op:
        batch_op.alter_column('payment_date',
               existing_type=mysql.DATETIME(),
               nullable=False,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
        batch_op.alter_column('payment_status',
               existing_type=mysql.VARCHAR(length=20),
               nullable=False,
               existing_server_default=sa.text("'pending'"))

    with op.batch_alter_table('payment_methods', schema=None) as batch_op:
        batch_op.create_unique_constraint(None, ['method_name'])

    with op.batch_alter_table('product_promotions', schema=None) as batch_op:
        batch_op.alter_column('is_active',
               existing_type=mysql.TINYINT(display_width=1),
               nullable=False,
               existing_server_default=sa.text("'1'"))
        batch_op.alter_column('created_at',
               existing_type=mysql.DATETIME(),
               nullable=False,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
        batch_op.alter_column('updated_at',
               existing_type=mysql.DATETIME(),
               nullable=False,
               existing_server_default=sa.text('CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP'))

    with op.batch_alter_table('product_suppliers', schema=None) as batch_op:
        batch_op.alter_column('is_primary',
               existing_type=mysql.TINYINT(display_width=1),
               nullable=False,
               existing_server_default=sa.text("'0'"))

    with op.batch_alter_table('product_variants', schema=None) as batch_op:
        batch_op.alter_column('additional_price',
               existing_type=mysql.DECIMAL(precision=10, scale=2),
               nullable=False,
               existing_server_default=sa.text("'0.00'"))
        batch_op.alter_column('stock_quantity',
               existing_type=mysql.INTEGER(),
               nullable=False,
               existing_server_default=sa.text("'0'"))
        batch_op.alter_column('created_at',
               existing_type=mysql.DATETIME(),
               nullable=False,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
        batch_op.alter_column('updated_at',
               existing_type=mysql.DATETIME(),
               nullable=False,
               existing_server_default=sa.text('CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP'))
        batch_op.create_index(batch_op.f('ix_product_variants_product_id'), ['product_id'], unique=False)

    with op.batch_alter_table('products', schema=None) as batch_op:
        batch_op.alter_column('created_at',
               existing_type=mysql.DATETIME(),
               nullable=False)
        batch_op.alter_column('updated_at',
               existing_type=mysql.DATETIME(),
               nullable=False)
        batch_op.drop_index('product_search', mysql_prefix='FULLTEXT')

    with op.batch_alter_table('reviews', schema=None) as batch_op:
        batch_op.alter_column('created_at',
               existing_type=mysql.DATETIME(),
               nullable=False,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))

    with op.batch_alter_table('sales', schema=None) as batch_op:
        batch_op.alter_column('sale_date',
               existing_type=mysql.DATETIME(),
               nullable=False,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
        batch_op.create_foreign_key(None, 'orders', ['order_id'], ['order_id'])

    with op.batch_alter_table('suppliers', schema=None) as batch_op:
        batch_op.alter_column('supplier_status',
               existing_type=mysql.VARCHAR(length=50),
               nullable=False,
               existing_server_default=sa.text("'active'"))
        batch_op.alter_column('registration_date',
               existing_type=mysql.DATETIME(),
               nullable=False,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))

    with op.batch_alter_table('supply_requests', schema=None) as batch_op:
        batch_op.alter_column('supply_status',
               existing_type=mysql.VARCHAR(length=20),
               nullable=False,
               existing_server_default=sa.text("'pending'"))
        batch_op.alter_column('request_date',
               existing_type=mysql.DATETIME(),
               nullable=False,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
        batch_op.alter_column('updated_at',
               existing_type=mysql.DATETIME(),
               nullable=False,
               existing_server_default=sa.text('CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP'))
        batch_op.create_index('idx_supply_request_requested_by', ['requested_by'], unique=False)

    with op.batch_alter_table('tracking_statuses', schema=None) as batch_op:
        batch_op.create_unique_constraint(None, ['status_name'])

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('tracking_statuses', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='unique')

    with op.batch_alter_table('supply_requests', schema=None) as batch_op:
        batch_op.drop_index('idx_supply_request_requested_by')
        batch_op.alter_column('updated_at',
               existing_type=mysql.DATETIME(),
               nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP'))
        batch_op.alter_column('request_date',
               existing_type=mysql.DATETIME(),
               nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
        batch_op.alter_column('supply_status',
               existing_type=mysql.VARCHAR(length=20),
               nullable=True,
               existing_server_default=sa.text("'pending'"))

    with op.batch_alter_table('suppliers', schema=None) as batch_op:
        batch_op.alter_column('registration_date',
               existing_type=mysql.DATETIME(),
               nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
        batch_op.alter_column('supplier_status',
               existing_type=mysql.VARCHAR(length=50),
               nullable=True,
               existing_server_default=sa.text("'active'"))

    with op.batch_alter_table('sales', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.alter_column('sale_date',
               existing_type=mysql.DATETIME(),
               nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))

    with op.batch_alter_table('reviews', schema=None) as batch_op:
        batch_op.alter_column('created_at',
               existing_type=mysql.DATETIME(),
               nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))

    with op.batch_alter_table('products', schema=None) as batch_op:
        batch_op.create_index('product_search', ['product_name', 'description'], unique=False, mysql_prefix='FULLTEXT')
        batch_op.alter_column('updated_at',
               existing_type=mysql.DATETIME(),
               nullable=True)
        batch_op.alter_column('created_at',
               existing_type=mysql.DATETIME(),
               nullable=True)

    with op.batch_alter_table('product_variants', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_product_variants_product_id'))
        batch_op.alter_column('updated_at',
               existing_type=mysql.DATETIME(),
               nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP'))
        batch_op.alter_column('created_at',
               existing_type=mysql.DATETIME(),
               nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
        batch_op.alter_column('stock_quantity',
               existing_type=mysql.INTEGER(),
               nullable=True,
               existing_server_default=sa.text("'0'"))
        batch_op.alter_column('additional_price',
               existing_type=mysql.DECIMAL(precision=10, scale=2),
               nullable=True,
               existing_server_default=sa.text("'0.00'"))

    with op.batch_alter_table('product_suppliers', schema=None) as batch_op:
        batch_op.alter_column('is_primary',
               existing_type=mysql.TINYINT(display_width=1),
               nullable=True,
               existing_server_default=sa.text("'0'"))

    with op.batch_alter_table('product_promotions', schema=None) as batch_op:
        batch_op.alter_column('updated_at',
               existing_type=mysql.DATETIME(),
               nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP'))
        batch_op.alter_column('created_at',
               existing_type=mysql.DATETIME(),
               nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
        batch_op.alter_column('is_active',
               existing_type=mysql.TINYINT(display_width=1),
               nullable=True,
               existing_server_default=sa.text("'1'"))

    with op.batch_alter_table('payment_methods', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='unique')

    with op.batch_alter_table('payment', schema=None) as batch_op:
        batch_op.alter_column('payment_status',
               existing_type=mysql.VARCHAR(length=20),
               nullable=True,
               existing_server_default=sa.text("'pending'"))
        batch_op.alter_column('payment_date',
               existing_type=mysql.DATETIME(),
               nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))

    with op.batch_alter_table('orders', schema=None) as batch_op:
        batch_op.alter_column('updated_at',
               existing_type=mysql.DATETIME(),
               nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP'))
        batch_op.alter_column('created_at',
               existing_type=mysql.DATETIME(),
               nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
        batch_op.alter_column('order_date',
               existing_type=mysql.DATETIME(),
               nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))

    with op.batch_alter_table('order_items', schema=None) as batch_op:
        batch_op.alter_column('discount_amount',
               existing_type=mysql.DECIMAL(precision=10, scale=2),
               nullable=True,
               existing_server_default=sa.text("'0.00'"))
        batch_op.alter_column('variant_id',
               existing_type=mysql.INTEGER(),
               nullable=True)

    with op.batch_alter_table('order_cancellation', schema=None) as batch_op:
        batch_op.alter_column('cancelled_at',
               existing_type=mysql.DATETIME(),
               nullable=True)

    with op.batch_alter_table('inventory_transactions', schema=None) as batch_op:
        batch_op.alter_column('transaction_date',
               existing_type=mysql.DATETIME(),
               nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))

    with op.batch_alter_table('inventory', schema=None) as batch_op:
        batch_op.create_index('unique_product_id', ['product_id'], unique=True)
        batch_op.alter_column('updated_at',
               existing_type=mysql.DATETIME(),
               nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP'))
        batch_op.alter_column('created_at',
               existing_type=mysql.DATETIME(),
               nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))

    with op.batch_alter_table('damage_products', schema=None) as batch_op:
        batch_op.alter_column('reported_at',
               existing_type=mysql.DATETIME(),
               nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))

    with op.batch_alter_table('cancellation_reason', schema=None) as batch_op:
        batch_op.add_column(sa.Column('other_reason', mysql.VARCHAR(length=255), nullable=True))
        batch_op.drop_constraint(None, type_='unique')
        batch_op.alter_column('cancellation_reason_name',
               existing_type=sa.String(length=100),
               type_=mysql.VARCHAR(length=255),
               existing_nullable=False)

    op.create_table('payments',
    sa.Column('payment_id', mysql.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('order_id', mysql.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('user_id', mysql.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('payment_method_id', mysql.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('payment_date', mysql.DATETIME(), nullable=False),
    sa.Column('payment_proof_url', mysql.VARCHAR(length=255), nullable=True),
    sa.Column('payment_status', mysql.VARCHAR(length=20), nullable=False),
    sa.Column('reference_number', mysql.TEXT(), nullable=True),
    sa.ForeignKeyConstraint(['order_id'], ['orders.order_id'], name='payments_ibfk_1'),
    sa.ForeignKeyConstraint(['payment_method_id'], ['payment_methods.payment_method_id'], name='payments_ibfk_3'),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], name='payments_ibfk_2'),
    sa.PrimaryKeyConstraint('payment_id'),
    mysql_collate='utf8mb4_0900_ai_ci',
    mysql_default_charset='utf8mb4',
    mysql_engine='InnoDB'
    )
    # ### end Alembic commands ###
